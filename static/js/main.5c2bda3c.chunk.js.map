{"version":3,"sources":["api.ts","atom.ts","Routes/Chart.tsx","Routes/Price.tsx","Routes/Coin.tsx","Routes/Coins.tsx","Router.tsx","theme.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","response","json","coinId","infoData","priceData","endDate","Math","floor","Date","now","startDate","isDarkAtom","atom","key","default","Chart","useQuery","fetchCoinHistory","isLoading","data","isDark","useRecoilValue","type","series","map","price","x","time_open","y","open","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","xaxis","categories","yaxis","labels","formatter","val","toFixed","Price","tickerData","Overview","OverviewItem","quotes","USD","ath_price","percent_from_price_ath","market_cap","market_cap_change_24h","Container","styled","div","Header","header","props","textColor","accentColor","Title","h1","Loader","span","bgColor","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoin","infoLoading","fetchTickers","refetchInterval","tickerLoading","loading","Helmet","name","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","useRecoilState","setIsDarkAtom","onClick","current","slice","coin","pathname","id","src","toLowerCase","Router","basename","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.5c2bda3c.chunk.js","sourcesContent":["const BASE_URL = 'https://api.coinpaprika.com/v1';\n\nexport async function fetchCoins() {\n  const response = await fetch(BASE_URL + '/coins');\n  const json = await response.json();\n  return json;\n}\n\nexport async function fetchCoin(coinId: string) {\n  const infoData = await (await fetch(BASE_URL + `/coins/${coinId}`)).json();\n  return infoData;\n}\n\nexport async function fetchTickers(coinId: string) {\n  const priceData = await (await fetch(BASE_URL + `/tickers/${coinId}`)).json();\n  return priceData;\n}\n\nexport async function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 14;\n  const priceData = await (\n    await fetch(\n      BASE_URL +\n        `/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`,\n    )\n  ).json();\n  return priceData;\n}\n","import { atom } from 'recoil';\n\nexport const isDarkAtom = atom({\n  key: 'isDark',\n  default: true,\n});\n","import { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\nimport ApexChart from 'react-apexcharts';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from '../atom';\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: Date;\n  time_close: Date;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(['ohlcv', coinId], () =>\n    fetchCoinHistory(coinId),\n  );\n  const isDark = useRecoilValue(isDarkAtom);\n\n  return (\n    <div>\n      {isLoading ? (\n        'Coin price is loading...'\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return {\n                  x: new Date(price.time_open),\n                  y: [price.open, price.high, price.low, price.close],\n                };\n              }),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? 'dark' : 'light',\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: 'transparent',\n            },\n            grid: { show: false },\n            xaxis: {\n              type: 'datetime',\n              categories: data?.map((price) => price.time_open),\n            },\n            yaxis: {\n              labels: {\n                formatter: function (val) {\n                  return val.toFixed(2);\n                },\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { PriceData, Overview, OverviewItem } from './Coin';\n\ninterface PriceProps {\n  tickerData?: PriceData;\n}\n\nfunction Price({ tickerData }: PriceProps) {\n  return (\n    <>\n      <Overview>\n        <OverviewItem>\n          <span> All-time High price: </span>\n          <span> {tickerData?.quotes.USD.ath_price.toFixed(2)}</span>\n        </OverviewItem>\n        <OverviewItem>\n          <span> Percent from all-time-high price: </span>\n          <span> {tickerData?.quotes.USD.percent_from_price_ath}%</span>\n        </OverviewItem>\n      </Overview>\n      <Overview>\n        <OverviewItem>\n          <span> Market Cap: </span>\n          <span> {tickerData?.quotes.USD.market_cap.toFixed(2)}</span>\n        </OverviewItem>\n        <OverviewItem>\n          <span> Market Cap Change 24h: </span>\n          <span> {tickerData?.quotes.USD.market_cap_change_24h}%</span>\n        </OverviewItem>\n      </Overview>\n    </>\n  );\n}\n\nexport default Price;\n","import { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport {\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { fetchCoin, fetchTickers } from '../api';\nimport Chart from './Chart';\nimport Price from './Price';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n  div {\n    margin-top: 20px;\n    padding: 7px;\n    border: 1px solid ${(props) => props.theme.textColor};\n    border-radius: 5px;\n    transition: color 0.2s ease-in-out;\n    &:hover {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 64px;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nexport const Overview = styled.div`\n  padding: 0px 20px;\n  margin: auto;\n  margin-top: 25px;\n  max-width: 600px;\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 7px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  padding: 5px;\n\n  span {\n    padding: 5px;\n    text-transform: uppercase;\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n  line-height: 1.3;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.bgColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  a {\n    display: block;\n  }\n`;\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  contracts: Contract[];\n  parent: Parent;\n  tags: Tag[];\n  team: Team[];\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: Date;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  links: Links;\n  links_extended: LinksExtended[];\n  whitepaper: Whitepaper;\n  first_data_at: Date;\n  last_data_at: Date;\n}\n\ninterface Contract {\n  contract: string;\n  platform: string;\n  type: string;\n}\n\ninterface Links {\n  explorer: string[];\n  facebook: string[];\n  reddit: string[];\n  source_code: string[];\n  website: string[];\n  youtube: string[];\n}\n\ninterface LinksExtended {\n  url: string;\n  type: string;\n  stats?: Stats;\n}\n\ninterface Stats {\n  subscribers?: number;\n  contributors?: number;\n  stars?: number;\n  followers?: number;\n}\n\ninterface Parent {\n  id: string;\n  name: string;\n  symbol: string;\n}\n\ninterface Tag {\n  id: string;\n  name: string;\n  coin_counter: number;\n  ico_counter: number;\n}\n\ninterface Team {\n  id: string;\n  name: string;\n  position: string;\n}\n\ninterface Whitepaper {\n  link: string;\n  thumbnail: string;\n}\n\nexport interface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: Date;\n  last_updated: Date;\n  quotes: Quotes;\n}\n\ninterface Quotes {\n  USD: Usd;\n}\n\ninterface Usd {\n  price: number;\n  volume_24h: number;\n  volume_24h_change_24h: number;\n  market_cap: number;\n  market_cap_change_24h: number;\n  percent_change_15m: number;\n  percent_change_30m: number;\n  percent_change_1h: number;\n  percent_change_6h: number;\n  percent_change_12h: number;\n  percent_change_24h: number;\n  percent_change_7d: number;\n  percent_change_30d: number;\n  percent_change_1y: number;\n  ath_price: number;\n  ath_date: Date;\n  percent_from_price_ath: number;\n}\n\ninterface paramsType {\n  coinId: string;\n}\n\ninterface routeState {\n  name: string;\n}\n\nfunction Coin() {\n  const { coinId } = useParams<paramsType>();\n  const { state } = useLocation<routeState>();\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoin(coinId),\n  );\n  const { isLoading: tickerLoading, data: tickerData } = useQuery<PriceData>(\n    ['ticker', coinId],\n    () => fetchTickers(coinId),\n    { refetchInterval: 5000 },\n  );\n\n  const loading = infoLoading && tickerLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state ? state.name : loading ? 'Loading...' : infoData?.name}\n        </Title>\n        <Link to=\"/\">\n          <div> Back to Coin List </div>\n        </Link>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>RANK:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>SYMBOL:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>PRICE:</span>\n              <span>{tickerData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>TOTAL SUPPLY:</span>\n              <span>{tickerData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>MAX SUPPLY:</span>\n              <span>{tickerData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/${coinId}/price`}>\n              <Price tickerData={tickerData} />\n            </Route>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\nimport { isDarkAtom } from '../atom';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 30px;\n  span {\n    margin-top: 20px;\n    padding: 7px;\n    border: 1px solid ${(props) => props.theme.textColor};\n    border-radius: 5px;\n    transition: color 0.2s ease-in-out;\n    &:hover {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 64px;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst CoinsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  margin: 10px 0px;\n  border: 1px solid ${(props) => props.theme.textColor};\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n  a {\n    padding: 15px;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in-out;\n  }\n  border-radius: 7px;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 8px;\n`;\n\ninterface coinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<coinInterface[]>('allCoins', fetchCoins);\n  const [isDark, setIsDarkAtom] = useRecoilState(isDarkAtom);\n  const toggleDark = () => setIsDarkAtom((current) => !current);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n        <span onClick={toggleDark}>\n          {isDark ? 'Click to Light Mode 🌞' : 'Click to Dark Mode 🌜'}\n        </span>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Coin from './Routes/Coin';\nimport Coins from './Routes/Coins';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename=\"/react_first_challenge_coin\">\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#2f3640',\n  textColor: 'white',\n  accentColor: '#9c88ff',\n  cardBgColor: 'transparent',\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'whitesmoke',\n  textColor: 'black',\n  accentColor: '#9c88ff',\n  cardBgColor: 'white',\n};\n","import React, { useState } from 'react';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { darkTheme, lightTheme } from './theme';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from './atom';\n\nconst GlobalStyle = createGlobalStyle`\n\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:  ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n* {\n  box-sizing: border-box;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\n\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}